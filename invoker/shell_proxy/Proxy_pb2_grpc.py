# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from invoker.shell_proxy import Proxy_pb2 as Proxy__pb2


class ProxyStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

    Args:
      channel: A grpc.Channel.
    """
        self.Execute = channel.unary_unary(
            '/proto.Proxy/Execute',
            request_serializer=Proxy__pb2.Cmd.SerializeToString,
            response_deserializer=Proxy__pb2.Result.FromString,
        )


class ProxyServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def Execute(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProxyServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Execute':
            grpc.unary_unary_rpc_method_handler(
                servicer.Execute,
                request_deserializer=Proxy__pb2.Cmd.FromString,
                response_serializer=Proxy__pb2.Result.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler('proto.Proxy', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
